## Editor Rules (Cursor) â€” myapps-nextjs

This file contains editing guidelines for Cursor. Please respect existing design and style, and do not make unrelated changes.

### Basic Principles
- **Minimal Changes**: Edit only the scope necessary to achieve the goal.
- **Consistency**: Satisfy TypeScript strict mode and pass ESLint.
- **Structure**: Don't break App Router configuration. Use `@/*` alias.

### Next.js / React Rules
- Server components are default. Add `"use client"` at top only when client-side is necessary.
- Prioritize server-side data fetching (server actions/route handlers).
- Document cache strategy for `fetch` (`{ cache: 'no-store' }` or `{ next: { revalidate } }`).
- Use `next/image` for images, `next/link` for links.
- Use `metadata` / `generateMetadata` for metadata.

### Files / Placement
- Pages: `src/app/**/page.tsx`
- Layouts: `src/app/**/layout.tsx`
- Route handlers: `src/app/api/**/route.ts`
- Global CSS only in `src/app/globals.css`. Prioritize Tailwind for local styles.
- Reusable UI in `src/components/**`. Business/utilities in `src/lib/**`.
- shadcn/ui components in `src/components/ui/*`.

### Tailwind v4
- Utility first. Arbitrary values only when necessary.
- Express dark mode/responsive with utilities.
- When custom CSS is needed, preserve meaning with CSS variables.

### Accessibility / Performance
- Appropriate `aria-*` and labels.
- Avoid unnecessary client JS, consider dynamic imports.
- `sizes` for images, `priority` for important images.

### Dependency Addition
- Document necessity and prioritize lightness/maintainability. Use `pnpm i` after addition.
- Use `react-icons` for icons (do not use `lucide-react`).
- Recommend `pnpm dlx shadcn add <component>` when adding UI components.

### Post-Change Verification
- Confirm types/ESLint with `pnpm lint`.
- Search impact scope and verify side effects.
- Verify build with `pnpm build` for UI changes.

### Commits
- Conventional Commits. Messages explain Why in 1-2 sentences. Don't include sensitive information.
